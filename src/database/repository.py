from sqlalchemy import insert, select, update
from sqlalchemy.exc import IntegrityError
from database.database import async_session
from database.models import *
# FreeScketch, KindSkin, User


class UserRepository:
    @staticmethod
    async def get_username(user_id: int):
        async with async_session() as sess:
            query = select(User.name).filter_by(user_id=user_id)
            result = await sess.execute(query)
            return result.scalar_one_or_none()

    @staticmethod
    async def add_user_or_update(user_id: int, user_name: str):
        try:
            async with async_session() as sess:
                stmt = insert(User).values(user_id=user_id, name=user_name)
                await sess.execute(stmt)
                await sess.commit()
                return await UserRepository.get_username(user_id)
            
        except IntegrityError:
            async with async_session() as sess:
                stmt = update(User).values(name=user_name).filter_by(user_id=user_id)
                await sess.execute(stmt)
                await sess.commit()
                return await UserRepository.get_username(user_id)
            
    @staticmethod
    async def register_user(user_id: int):
        async with async_session() as sess:
            stmt = update(User).values(user_regist=True).filter_by(user_id=user_id)
            await sess.execute(stmt)
            await sess.commit()
            return True
            
    @staticmethod
    async def check_register_user(user_id: int):
        async with async_session() as sess:
            query = select(User.user_regist).filter_by(user_id=user_id)
            result = await sess.execute(query)
            return result.scalar_one_or_none()


class FreeSketchRepository:
    @staticmethod
    async def get_id_free_sketch(user_id: int) -> int:
            async with async_session() as sess:
                query = select(User.free_sketch).filter_by(user_id=user_id)
                id_scetch = await sess.execute(query)
                return id_scetch.scalar_one_or_none()
    
    @staticmethod
    async def update_id_free_sketch(user_id: int):
            async with async_session() as sess:
                id_sketch_by_user = await FreeSketchRepository.get_id_free_sketch(user_id)
                if id_sketch_by_user == 19:
                    id_sketch_by_user = 1
                    stmt = update(User).values(free_sketch=id_sketch_by_user).filter_by(user_id=user_id)
                    await sess.execute(stmt)
                    await sess.commit()
                    return True
                else:
                    id_sketch_by_user += 1
                    stmt = update(User).values(free_sketch=id_sketch_by_user).filter_by(user_id=user_id)
                    await sess.execute(stmt)
                    await sess.commit()
                    return False
    
    @staticmethod
    async def get_photo_path_sketch(user_id: int) -> str:
            async with async_session() as sess:
                photo_id = await FreeSketchRepository.get_id_free_sketch(user_id)
                query = select(FreeScketch.path).filter_by(id=photo_id)
                photo_path = await sess.execute(query)
                return photo_path.scalar_one_or_none()
            
    @staticmethod
    async def get_photo_description_sketch(user_id: int) -> str:
            async with async_session() as sess:
                photo_id = await FreeSketchRepository.get_id_free_sketch(user_id)
                query = select(FreeScketch.description).filter_by(id=photo_id)
                photo_description = await sess.execute(query)
                return photo_description.scalar_one_or_none()
            

class Calcul–°ostRepository:
    @staticmethod
    async def get_cost_user_tattoo(user_id: int, the_end: bool = False) -> int:
            async with async_session() as sess:
                query = select(User.cost_tattoo).filter_by(user_id=user_id)
                cost_tattoo = await sess.execute(query)
                cost_tattoo = cost_tattoo.scalar_one_or_none()
                if the_end:
                    stmt = update(User).values(cost_tattoo=0)
                    await sess.execute(stmt)
                    await sess.commit()
                return cost_tattoo
            
    @staticmethod
    async def get_prametrs_user_tattoo(user_id: int, the_end: bool = False) -> str:
            async with async_session() as sess:
                query = select(User.parametrs_tattoo).filter_by(user_id=user_id)
                parametrs_tattoo = await sess.execute(query)
                parametrs_tattoo = parametrs_tattoo.scalar_one_or_none()
                if the_end:
                    stmt = update(User).values(parametrs_tattoo='')
                    await sess.execute(stmt)
                    await sess.commit()
                return parametrs_tattoo
                
    @staticmethod
    async def update_cost_and_parametrs_user_tattoo(user_id: int, price: int, parametrs: str):
         async with async_session() as sess:
                cost_user = await Calcul–°ostRepository.get_cost_user_tattoo(user_id)
                cost_tattoo = cost_user + price
                parametrs_tattoo = await Calcul–°ostRepository.get_prametrs_user_tattoo(user_id)
                if parametrs_tattoo == '':
                     new_parametrs_tattoo = parametrs
                else:
                    new_parametrs_tattoo = parametrs_tattoo + ',' + parametrs
                stmt = update(User).values(cost_tattoo=cost_tattoo, parametrs_tattoo=new_parametrs_tattoo).filter_by(user_id=user_id)
                await sess.execute(stmt)
                await sess.commit()
            
    # @staticmethod
    # async def update_cost_and_parametrs_user_tattoo(user_id: int, price: int):
    #      async with async_session() as sess:
    #             cost_user = await Calcul–°ostRepository.get_cost_user_tattoo(user_id)
    #             cost_tattoo = cost_user + price
    #             stmt = update(User).values(cost_tattoo=cost_tattoo)
    #             await sess.execute(stmt)
    #             await sess.commit()


    # async def update_parametrs_user_tattoo(user_id: int, parametrs: str):
    #      async with async_session() as sess:
    #             parametrs_tattoo = await Calcul–°ostRepository.get_prametrs_user_tattoo(user_id)
    #             new_parametrs_tattoo = parametrs_tattoo + ',' + parametrs
    #             stmt = update(User).values(parametrs_tattoo=new_parametrs_tattoo)
    #             await sess.execute(stmt)
    #             await sess.commit()

async def take_counts_users():
    async with async_session() as session:
        query = select(User.id).order_by(User.id.desc()).limit(1)
        result = await session.execute(query)
        return result.scalar_one_or_none()
        

async def insert_data_in_free_scetch():
    async with async_session() as session:

        sketch1 = FreeScketch(path=r'free_sketch/1.jpg', description='1/19\n\nüñ§–û–≤–µ–Ωüñ§\n–°–¥–µ–ª–∞—é –≤ —Ä–∞–∑–º–µ—Ä–µ 15-30 —Å–º.\n–°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—Ä—å–∏—Ä—É–µ—Ç—Å—è –æ—Ç —Ä–∞–∑–º–µ—Ä–∞, –æ—Ç 6.000-10.000')
        sketch2 = FreeScketch(path=r'free_sketch/2.jpg', description='2/19\n\nüñ§–°–∫–æ—Ä–ø–∏–æ–Ωüñ§\n–°–¥–µ–ª–∞—é –≤ —Ä–∞–∑–º–µ—Ä–µ 15-30 —Å–º.\n–°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—Ä—å–∏—Ä—É–µ—Ç—Å—è –æ—Ç —Ä–∞–∑–º–µ—Ä–∞, –æ—Ç 6.000-10.000')
        sketch3 = FreeScketch(path=r'free_sketch/3.jpg', description='3/19\n\nüñ§–í–µ—Å—ãüñ§\n–°–¥–µ–ª–∞—é –≤ —Ä–∞–∑–º–µ—Ä–µ 15-30 —Å–º.\n–°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—Ä—å–∏—Ä—É–µ—Ç—Å—è –æ—Ç —Ä–∞–∑–º–µ—Ä–∞, –æ—Ç 6.000-10.000')
        sketch4 = FreeScketch(path=r'free_sketch/4.jpg', description='4/19\n\nüñ§–õ–µ–≤üñ§\n–°–¥–µ–ª–∞—é –≤ —Ä–∞–∑–º–µ—Ä–µ 15-30 —Å–º.\n–°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—Ä—å–∏—Ä—É–µ—Ç—Å—è –æ—Ç —Ä–∞–∑–º–µ—Ä–∞, –æ—Ç 6.000-10.000')
        sketch5 = FreeScketch(path=r'free_sketch/5.jpg', description='5/19\n\nüñ§–†–∞–∫üñ§\n–°–¥–µ–ª–∞—é –≤ —Ä–∞–∑–º–µ—Ä–µ 15-30 —Å–º.\n–°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—Ä—å–∏—Ä—É–µ—Ç—Å—è –æ—Ç —Ä–∞–∑–º–µ—Ä–∞, –æ—Ç 6.000-10.000')
        sketch6 = FreeScketch(path=r'free_sketch/6.jpg', description='6/19\n\nüñ§–ë–ª–∏–∑–Ω–µ—Ü—ãüñ§\n–°–¥–µ–ª–∞—é –≤ —Ä–∞–∑–º–µ—Ä–µ 15-30 —Å–º.\n–°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—Ä—å–∏—Ä—É–µ—Ç—Å—è –æ—Ç —Ä–∞–∑–º–µ—Ä–∞, –æ—Ç 6.000-10.000')
        sketch7 = FreeScketch(path=r'free_sketch/7.jpg', description='7/19\n\nüñ§–¢–µ–ª–µ—Üüñ§\n–°–¥–µ–ª–∞—é –≤ —Ä–∞–∑–º–µ—Ä–µ 15-30 —Å–º.\n–°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—Ä—å–∏—Ä—É–µ—Ç—Å—è –æ—Ç —Ä–∞–∑–º–µ—Ä–∞, –æ—Ç 6.000-10.000')
        sketch8 = FreeScketch(path=r'free_sketch/8.jpg', description='8/19\n\n–°–≤–æ–±–æ–¥–Ω—ã–µ —Ü–≤–µ—Ç–æ—á–Ω—ã–µ —ç—Å–∫–∏–∑—ã. –†–∞–∑–º–µ—Ä 15-20 —Å–º. \n–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞–∂–¥–æ–π - 6.000')
        sketch9 = FreeScketch(path=r'free_sketch/9.jpg', description='9/19\n\nüñ§–í—Å–µ–≤–∏–¥—è—â–∏–µüñ§\n–†–∞–∑–º–µ—Ä 15-20 —Å–º. –°—Ç–æ–∏–º–æ—Å—Ç—å –ª—é–±–æ–≥–æ —ç—Å–∫–∏–∑–∞ - 6.000.')
        sketch10 = FreeScketch(path=r'free_sketch/10.jpg', description='10/19\n\nüñ§–í—Å–µ–≤–∏–¥—è—â–∏–µüñ§\n–†–∞–∑–º–µ—Ä 15-20 —Å–º. –°—Ç–æ–∏–º–æ—Å—Ç—å –ª—é–±–æ–≥–æ  —ç—Å–∫–∏–∑–∞ - 6.000.')
        sketch11 = FreeScketch(path=r'free_sketch/11.jpg', description='11/19\n\nüñ§–°–ª–µ–ø–æ—Ç–∞üñ§\n–†–∞–∑–º–µ—Ä 20-25 —Å–º. –°—Ç–æ–∏–º–æ—Å—Ç—å - 7.000')
        sketch12 = FreeScketch(path=r'free_sketch/12.jpg', description='12/19\n\nüñ§–ö—Ä—ã–ª–∞—Ç—ã–µüñ§\n–†–∞–∑–º–µ—Ä –≤ —à–∏—Ä–∏–Ω—É - 15-20 —Å–º \n–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞–∂–¥–æ–π —Ç–∞—Ç—É –ø–æ —ç—Ç–∏–º —ç—Å–∫–∏–∑–∞–º - 7.000')
        sketch13 = FreeScketch(path=r'free_sketch/13.jpg', description='13/19\n\nüñ§–°–µ—Ç –ø–∞—Ä–Ω—ã—Ö —Ç–∞—Ç—É–∏—Ä–æ–≤–æ–∫üñ§\n–ú–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å  –∏ –æ–¥–Ω—É. \n–°—Ç–æ–∏–º–æ—Å—Ç—å –ª—é–±–æ–≥–æ —ç—Å–∫–∏–∑–∞ - 5.000')
        sketch14 = FreeScketch(path=r'free_sketch/14.jpg', description='14/19\n\nüñ§–°—É–∫–∫—É–± –∏ –ú—É—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π —Ü–≤–µ—Ç–æ–∫üñ§\n–†–∞–∑–º–µ—Ä –∫–∞–∂–¥–æ–≥–æ —ç—Å–∫–∏–∑–∞ - –æ–∫–æ–ª–æ 20 —Å–º. \n–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ —ç—Å–∫–∏–∑–∞ - 7.000')
        sketch15 = FreeScketch(path=r'free_sketch/15.jpg', description='15/19\n\nüñ§–ó–∞–º–æ–∫ —Å–º–µ—Ä—Ç–∏, –í—Å–µ–≤–∏–¥—è—â–∏–µ —è–≥–æ–¥—ã, –ú–æ—Ä—Å–∫–æ–π –æ–±–∏—Ç–∞—Ç–µ–ª—åüñ§\n–†–∞–∑–º–µ—Ä—ã: \n–ó–∞–º–æ–∫ - 15-23 —Å–º\n–Ø–≥–æ–¥—ã - –¥–æ 15 —Å–º \n–ú–æ—Ä—Å–∫–æ–π –æ–±–∏—Ç–∞—Ç–µ–ª—å - –¥–æ 15 —Å–º \n\n–¶–µ–Ω–∞:\n–ó–∞–º–æ–∫ - 7.000\n–Ø–≥–æ–¥—ã –∏ –æ–±–∏—Ç–∞—Ç–µ–ª—å –º–æ—Ä–µ–π - –ø–æ 5.000')
        sketch16 = FreeScketch(path=r'free_sketch/16.jpg', description='16/19\n\nüñ§–°–æ–Ω–Ω—ã–π –ø–∞—Ä–∞–ª–∏—á, –ù–∞–º–∞–∫—É–±–∏üñ§\n–†–∞–∑–º–µ—Ä –∫–∞–∂–¥–æ–≥–æ —ç—Å–∫–∏–∑–∞ - 15-23 —Å–º. \n–°—Ç–æ–∏–º–æ—Å—Ç—å –ª—é–±–æ–≥–æ —ç—Å–∫–∏–∑–∞ - 7.000')
        sketch17 = FreeScketch(path=r'free_sketch/17.jpg', description='17/19\n\n üñ§–§–ª–∞–º–∏–Ω–≥–æüñ§\n–ü—Ä–æ–µ–∫—Ç –Ω–∞ —Ü–µ–ª—É—é —Å–ø–∏–Ω—É. –î–µ–ª–∞–µ—Ç—Å—è –≤ 5 —Å–µ–∞–Ω—Å–æ–≤ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –Ω–µ –±–æ–ª–µ–µ 3-—Ö —á–∞—Å–æ–≤. –°—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ —Å–µ–∞–Ω—Å–∞ - 9.000.')
        sketch18 = FreeScketch(path=r'free_sketch/18.jpg', description='18/19\n\nüñ§Scorpioüñ§\n–†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω–æ–≥–æ —ç—Å–∫–∏–∑–∞ 15-20 —Å–º, —Å—Ç–æ–∏–º–æ—Å—Ç—å - 6.000.\n–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã–µ –º–µ—Å—Ç–∞ –¥–ª—è –Ω–∞–Ω–µ—Å–µ–Ω–∏—è: –ø—Ä–µ–¥–ø–ª–µ—á—å–µ, –ø–ª–µ—á–æ, –±–∏—Ü–µ–ø—Å, –∏–∫—Ä–∞, –≥–æ–ª–µ–Ω—å, –±–µ–¥—Ä–æ, —Ç–æ—Ä—Å.')
        sketch19 = FreeScketch(path=r'free_sketch/19.jpg', description='19/19 \n\n–ü—Ä–∞–π—Å –Ω–∞ —ç—Å–∫–∏–∑—ã:\nüñ§–ú–æ—Ä—Å–∫–∞—è –≤–µ–¥—å–º–∞üñ§ - –ø—Ä–æ–µ–∫—Ç –Ω–∞ —Ü–µ–ª—É—é –≤–Ω–µ—à–Ω—é—é —á–∞—Å—Ç—å —Ä—É–∫–∏. –°—Ç–æ–∏–º–æ—Å—Ç—å –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ - 27.000.\n–ü—Ä–æ–µ–∫—Ç –¥–µ–ª–∞–µ—Ç—Å—è –∑–∞ 3 —Å–µ–∞–Ω—Å–∞, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ - –Ω–µ –±–æ–ª–µ–µ 3-—Ö —á–∞—Å–æ–≤. –í–æ–∑–º–æ–∂–Ω–∞ –æ–ø–ª–∞—Ç–∞ –ø–æ —Å–µ–∞–Ω—Å–∞–º.')
        

        session.add_all([sketch1,sketch2,sketch3,sketch4,sketch5,sketch6,sketch7,sketch8,sketch9,sketch10,sketch11,sketch12,sketch13,sketch14,sketch15,sketch16,sketch17,sketch18,sketch19])
        await session.commit()

# async def insert_data_in_kind_skin():
#      async with async_session() as session:
#         skin1 = KindSkin(skin='–ß–∏—Å—Ç—ã–π —É—á–∞—Å—Ç–æ–∫ –∫–æ–∂–∏',prise=0)
#         skin2 = KindSkin(skin='–ü–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ —à—Ä–∞–º–æ–≤',prise=0)
#         skin3 = KindSkin(skin='–ü–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ —Å—Ç–∞—Ä–æ–π —Ç–∞—Ç—É–∏—Ä–æ–≤–∫–∏',prise=2000)
#         skin4 = KindSkin(skin='–ö–æ—Ä—Ä–µ–∫—Ü–∏—è —Å—Ç–∞—Ä–æ–π —Ç–∞—Ç—É–∏—Ä–æ–≤–∫–∏',prise=0)
#         session.add_all([skin1,skin2,skin3,skin4])
#         await session.commit()

# async def insert_data_in_body_part():
#      async with async_session() as session:
#         body1 = BodyPart(body='–ü–ª–µ—á–æ',trabl=0)
#         body2 = BodyPart(body='–ë–∏—Ü–µ–ø—Å',trabl=0)
#         body3 = BodyPart(body='–¢—Ä–∏—Ü–µ–ø—Å',trabl=0)
#         body4 = BodyPart(body='–ü—Ä–µ–¥–ø–ª–µ—á—å–µ',trabl=0)
#         body5 = BodyPart(body='–õ–æ–∫–æ—Ç—å',trabl=1000)
#         body6 = BodyPart(body='–°–≥–∏–±',trabl=1000)
#         body7 = BodyPart(body='–ö–∏—Å—Ç—å',trabl=1000)
#         body8 = BodyPart(body='–ü–∞–ª—å—Ü—ã',trabl=1000)
#         body9 = BodyPart(body='–ë–µ–¥—Ä–æ',trabl=0)
#         body10 = BodyPart(body='–ö–æ–ª–µ–Ω–æ',trabl=1000)
#         body11 = BodyPart(body='–ì–æ–ª–µ–Ω',trabl=0)
#         body12 = BodyPart(body='–ò–∫—Ä–∞',trabl=0)
#         body13 = BodyPart(body='–°—Ç–æ–ø–∞',trabl=1000)
#         body14 = BodyPart(body='–ì—Ä—É–¥—å',trabl=0)
#         body15 = BodyPart(body='–†–µ–±—Ä–∞',trabl=1000)
#         body16 = BodyPart(body='–ñ–∏–≤–æ—Ç',trabl=1000)
#         body17 = BodyPart(body='–ö–ª—é—á–∏—Ü—ã',trabl=0)
#         body18 = BodyPart(body='–õ–æ–ø–∞—Ç–∫–∏',trabl=0)
#         body19 = BodyPart(body='–ü–æ–∑–≤–æ–Ω–æ—á–Ω–∏–∫',trabl=0)
#         body20 = BodyPart(body='–ü–æ—è—Å–Ω–∏—Ü–∞',trabl=1000)
#         body21 = BodyPart(body='–®–µ—è-–°–∑–∞–¥–∏',trabl=1000)
#         body22 = BodyPart(body='–®–µ—è-–°–±–æ–∫—É',trabl=1000)
#         body23 = BodyPart(body='–®–µ—è-–°–ø–µ—Ä–µ–¥–∏',trabl=1000)
#         body24 = BodyPart(body='–õ–∏—Ü–æ',trabl=0)
#         body25 = BodyPart(body='–ó–∞ —É—Ö–æ–º',trabl=0)
#         body26 = BodyPart(body='–í–∏—Å–æ–∫',trabl=0)
#         body27 = BodyPart(body='–ó–∞—Ç—ã–ª–æ–∫',trabl=1000)

#         session.add_all([body1,body2,body3,body4,body5,body6,body7,body8,body9,body10,body11,body12,body13,
#                         body14,body15,body16,body17,body18,body19,body20,body21,body22,body23,body24,body25,
#                         body26,body27])
#         await session.commit()

# async def insert_data_in_body_part():
#      async with async_session() as session:
#         prise1 = PriseSize(size='–î–æ 10 —Å–º',price_ot=5000,price_do=5000)
#         prise2 = PriseSize(size='–û—Ç 10 –¥–æ 15 —Å–º',price_ot=9000,price_do=12000)
#         prise3 = PriseSize(size='–û—Ç 15 –¥–æ 30 —Å–º',price_ot=15000,price_do=5000)
#         prise4 = PriseSize(size='30 –∏ –±–æ–ª–µ–µ —Å–º',price_ot=5000,price_do=5000)
#         session.add_all([prise1,prise2,prise3,prise4])
#         await session.commit()